{"remainingRequest":"F:\\外包项目重置\\音乐管理系统\\影院管理系统\\MusicSystem\\MusicSystemAdminVue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\外包项目重置\\音乐管理系统\\影院管理系统\\MusicSystem\\MusicSystemAdminVue\\src\\pages\\SongPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\外包项目重置\\音乐管理系统\\影院管理系统\\MusicSystem\\MusicSystemAdminVue\\src\\pages\\SongPage.vue","mtime":1696062370000},{"path":"F:\\外包项目重置\\音乐管理系统\\影院管理系统\\MusicSystem\\MusicSystemAdminVue\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696221622000},{"path":"F:\\外包项目重置\\音乐管理系统\\影院管理系统\\MusicSystem\\MusicSystemAdminVue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1696221623000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SongPage.vue"],"names":[],"mappingsfile":"SongPage.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div class=\"table\">\r\n        <div class=\"crumbs\" style=\"padding: 20px 0 5px 20px\">\r\n            <i class=\"iconfont icon-r-list\" style=\"font-size: 24px\">\r\n                歌曲信息</i\r\n            >\r\n        </div>\r\n        <div class=\"container\">\r\n            <div class=\"handle-box\">\r\n                <el-input\r\n                    v-model=\"select_word\"\r\n                    placeholder=\"请输入歌曲名\"\r\n                    class=\"handle-input\"\r\n                ></el-input\r\n                ><br /><br />\r\n                <el-button type=\"danger\" style=\"font-size: 18px\" @click=\"delAll\"\r\n                    ><i\r\n                        class=\"iconfont icon-r-delete\"\r\n                        style=\"font-size: 22px\"\r\n                    ></i>\r\n                    批量删除</el-button\r\n                >\r\n                <el-button\r\n                    type=\"primary\"\r\n                    style=\"font-size: 18px\"\r\n                    @click=\"centerDialogVisible = true\"\r\n                    ><i class=\"iconfont icon-r-add\" style=\"font-size: 22px\"></i>\r\n                    添加歌曲</el-button\r\n                >\r\n            </div>\r\n        </div>\r\n        <el-table\r\n            ref=\"multipleTable\"\r\n            border\r\n            style=\"width: 100%\"\r\n            height=\"680px\"\r\n            :data=\"data\"\r\n            @selection-change=\"handleSelectionChange\"\r\n        >\r\n            <el-table-column type=\"selection\" width=\"40\"></el-table-column>\r\n            <el-table-column label=\"歌曲图片\" width=\"110\" align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                    <div class=\"song-img\">\r\n                        <img :src=\"getUrl(scope.row.pic)\" style=\"width: 100%\" />\r\n                    </div>\r\n                    <div\r\n                        class=\"play\"\r\n                        @click=\"setSongUrl(scope.row.url, scope.row.name)\"\r\n                    >\r\n                        <div v-if=\"toggle == scope.row.name\">\r\n                            <svg class=\"icon\">\r\n                                <use xlink:href=\"#icon-zanting\"></use>\r\n                            </svg>\r\n                        </div>\r\n                        <div v-if=\"toggle != scope.row.name\">\r\n                            <svg class=\"icon\">\r\n                                <use xlink:href=\"#icon-bofanganniu\"></use>\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column\r\n                prop=\"name\"\r\n                label=\"歌手-歌名\"\r\n                width=\"120\"\r\n                align=\"center\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n                prop=\"introduction\"\r\n                label=\"专辑\"\r\n                width=\"150\"\r\n                align=\"center\"\r\n            ></el-table-column>\r\n            <el-table-column label=\"歌词\" align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                    <ul style=\"height: 100px; overflow: scroll\">\r\n                        <li\r\n                            v-for=\"(item, index) in parseLyric(scope.row.lyric)\"\r\n                            :key=\"index\"\r\n                        >\r\n                            {{ item }}\r\n                        </li>\r\n                    </ul>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"资源更新\" align=\"center\" width=\"100\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-upload\r\n                        :action=\"uploadUrl(scope.row.id)\"\r\n                        :before-upload=\"beforeAvatorUpload\"\r\n                        :on-success=\"handleAvatorSuccess\"\r\n                    >\r\n                        <el-button size=\"mini\">更新图片</el-button>\r\n                    </el-upload>\r\n                    <br />\r\n                    <el-upload\r\n                        :action=\"uploadSongUrl(scope.row.id)\"\r\n                        :before-upload=\"beforeSongUpload\"\r\n                        :on-success=\"handleSongSuccess\"\r\n                    >\r\n                        <el-button size=\"mini\">更新歌曲</el-button>\r\n                    </el-upload>\r\n                </template>\r\n            </el-table-column>\r\n\r\n            <el-table-column label=\"操作\" width=\"250\" align=\"center\" fixed=\"right\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"success\" @click=\"handleEdit(scope.row)\" style=\"font-size: 18px;\"\r\n                        ><i class=\"iconfont icon-r-edit\" style=\"font-size: 22px\"></i> 编辑</el-button\r\n                    >\r\n                    <el-button\r\n                        type=\"danger\"\r\n                        @click=\"handleDelete(scope.row.id)\" style=\"font-size: 18px;\"\r\n                        ><i class=\"iconfont icon-r-add\" style=\"font-size: 22px\"></i> 删除</el-button\r\n                    >\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <div class=\"pagination\">\r\n            <el-pagination\r\n                background\r\n                layout=\"total,prev,pager,next\"\r\n                :current-page=\"currentPage\"\r\n                :page-size=\"pageSize\"\r\n                :total=\"tableData.length\"\r\n                @current-change=\"handleCurrentChange\"\r\n            >\r\n            </el-pagination>\r\n        </div>\r\n\r\n        <el-dialog\r\n            title=\"添加歌曲\"\r\n            :visible.sync=\"centerDialogVisible\"\r\n            width=\"400px\"\r\n            center\r\n        >\r\n            <el-form\r\n                :model=\"registerForm\"\r\n                ref=\"registerForm\"\r\n                label-width=\"80px\"\r\n                action=\"\"\r\n                id=\"tf\"\r\n            >\r\n                <div>\r\n                    <label>歌名</label>\r\n                    <el-input type=\"text\" name=\"name\"></el-input>\r\n                </div>\r\n                <div>\r\n                    <label>专辑</label>\r\n                    <el-input type=\"text\" name=\"introduction\"></el-input>\r\n                </div>\r\n                <div>\r\n                    <label>歌词</label>\r\n                    <el-input type=\"textarea\" name=\"lyric\"></el-input>\r\n                </div>\r\n                <div>\r\n                    <label>歌曲上传</label>\r\n                    <input type=\"file\" name=\"file\" />\r\n                </div>\r\n            </el-form>\r\n            <span slot=\"footer\">\r\n                <el-button size=\"mini\" @click=\"centerDialogVisible = false\"\r\n                    >取消</el-button\r\n                >\r\n                <el-button size=\"mini\" @click=\"addSong\">确定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n\r\n        <el-dialog\r\n            title=\"修改歌曲\"\r\n            :visible.sync=\"editVisible\"\r\n            width=\"400px\"\r\n            center\r\n        >\r\n            <el-form :model=\"form\" ref=\"form\" label-width=\"80px\">\r\n                <el-form-item prop=\"name\" label=\"歌手-歌名\" size=\"mini\">\r\n                    <el-input\r\n                        v-model=\"form.name\"\r\n                        placeholder=\"歌手-歌名\"\r\n                    ></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"introduction\" label=\"专辑\" size=\"mini\">\r\n                    <el-input\r\n                        v-model=\"form.introduction\"\r\n                        placeholder=\"专辑\"\r\n                    ></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"lyric\" label=\"歌词\" size=\"mini\">\r\n                    <el-input\r\n                        v-model=\"form.lyric\"\r\n                        placeholder=\"歌词\"\r\n                        type=\"textarea\"\r\n                    ></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <span slot=\"footer\">\r\n                <el-button size=\"mini\" @click=\"editVisible = false\"\r\n                    >取消</el-button\r\n                >\r\n                <el-button size=\"mini\" @click=\"editSave\">确定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n\r\n        <el-dialog\r\n            title=\"删除歌曲\"\r\n            :visible.sync=\"delVisible\"\r\n            width=\"300px\"\r\n            center\r\n        >\r\n            <div align=\"center\">删除不可恢复，是否确定删除？</div>\r\n            <span slot=\"footer\">\r\n                <el-button size=\"mini\" @click=\"delVisible = false\"\r\n                    >取消</el-button\r\n                >\r\n                <el-button size=\"mini\" @click=\"deleteRow\">确定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mixin } from \"../mixins/index\";\r\nimport { mapGetters } from \"vuex\";\r\nimport \"@/assets/js/iconfont.js\";\r\nimport { songOfSingerId, updateSong, delSong } from \"../api/index\";\r\n\r\nexport default {\r\n    mixins: [mixin],\r\n    data() {\r\n        return {\r\n            singerId: \"\", //歌手id\r\n            singerName: \"\", //歌手名\r\n            centerDialogVisible: false, //添加弹窗是否显示\r\n            editVisible: false, //编辑弹窗是否显示\r\n            delVisible: false, //删除弹窗是否显示\r\n            registerForm: {\r\n                //添加框\r\n                name: \"\",\r\n                singerName: \"\",\r\n                introduction: \"\",\r\n                lyric: \"\",\r\n            },\r\n            form: {\r\n                //编辑框\r\n                id: \"\",\r\n                name: \"\",\r\n                introduction: \"\",\r\n                lyric: \"\",\r\n            },\r\n            tableData: [],\r\n            tempData: [],\r\n            select_word: \"\",\r\n            pageSize: 5, //分页每页大小\r\n            currentPage: 1, //当前页\r\n            idx: -1, //当前选择项\r\n            multipleSelection: [], //哪些项已经打勾\r\n            toggle: false, //播放器的图标状态\r\n        };\r\n    },\r\n    computed: {\r\n        ...mapGetters([\"isPlay\"]),\r\n        //计算当前搜索结果表里的数据\r\n        data() {\r\n            return this.tableData.slice(\r\n                (this.currentPage - 1) * this.pageSize,\r\n                this.currentPage * this.pageSize\r\n            );\r\n        },\r\n    },\r\n    watch: {\r\n        //搜索框里面的内容发生变化的时候，搜索结果table列表的内容跟着它的内容发生变化\r\n        select_word: function () {\r\n            if (this.select_word == \"\") {\r\n                this.tableData = this.tempData;\r\n            } else {\r\n                this.tableData = [];\r\n                for (let item of this.tempData) {\r\n                    if (item.name.includes(this.select_word)) {\r\n                        this.tableData.push(item);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n    },\r\n    created() {\r\n        this.singerId = this.$route.query.id;\r\n        this.singerName = this.$route.query.name;\r\n        this.getData();\r\n    },\r\n    destroyed() {\r\n        this.$store.commit(\"setIsPlay\", false);\r\n    },\r\n    methods: {\r\n        //获取当前页\r\n        handleCurrentChange(val) {\r\n            this.currentPage = val;\r\n        },\r\n        //查询所有歌手\r\n        getData() {\r\n            this.tempData = [];\r\n            this.tableData = [];\r\n            songOfSingerId(this.singerId).then((res) => {\r\n                this.tempData = res;\r\n                this.tableData = res;\r\n                this.currentPage = 1;\r\n            });\r\n        },\r\n        //添加歌手\r\n        addSong() {\r\n            let _this = this;\r\n            var form = new FormData(document.getElementById(\"tf\"));\r\n            form.append(\"singerId\", this.singerId);\r\n            form.set(\"name\", this.singerName + \"-\" + form.get(\"name\"));\r\n            if (!form.get(\"lyric\")) {\r\n                form.set(\"lyric\", \"[00:00:00]暂无歌词\");\r\n            }\r\n            var req = new XMLHttpRequest();\r\n            req.onreadystatechange = function () {\r\n                //req.readyState == 4 获取到返回的完整数据\r\n                //req.status == 200 和后台正常交互完成\r\n                if (req.readyState == 4 && req.status == 200) {\r\n                    let res = JSON.parse(req.response);\r\n                    if (res.code) {\r\n                        _this.getData();\r\n                        _this.registerForm = {};\r\n                        _this.notify(res.msg, \"success\");\r\n                    } else {\r\n                        _this.notify(\"保存失败\", \"error\");\r\n                    }\r\n                }\r\n            };\r\n            req.open(\"post\", `${_this.$store.state.HOST}/song/add`, false);\r\n            req.send(form);\r\n            _this.centerDialogVisible = false;\r\n        },\r\n        //弹出编辑页面\r\n        handleEdit(row) {\r\n            this.editVisible = true;\r\n            this.form = {\r\n                id: row.id,\r\n                name: row.name,\r\n                introduction: row.introduction,\r\n                lyric: row.lyric,\r\n            };\r\n        },\r\n        //保存编辑页面修改的数据\r\n        editSave() {\r\n            let params = new URLSearchParams();\r\n            params.append(\"id\", this.form.id);\r\n            params.append(\"name\", this.form.name);\r\n            params.append(\"introduction\", this.form.introduction);\r\n            params.append(\"lyric\", this.form.lyric);\r\n\r\n            updateSong(params)\r\n                .then((res) => {\r\n                    if (res.code == 1) {\r\n                        this.getData();\r\n                        this.notify(\"修改成功\", \"success\");\r\n                    } else {\r\n                        this.notify(\"修改失败\", \"error\");\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n            this.editVisible = false;\r\n        },\r\n        //更新图片\r\n        uploadUrl(id) {\r\n            return `${this.$store.state.HOST}/song/updateSongPic?id=${id}`;\r\n        },\r\n        //删除一名歌手\r\n        deleteRow() {\r\n            delSong(this.idx)\r\n                .then((res) => {\r\n                    if (res) {\r\n                        this.getData();\r\n                        this.notify(\"删除成功\", \"success\");\r\n                    } else {\r\n                        this.notify(\"删除失败\", \"error\");\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n            this.delVisible = false;\r\n        },\r\n        //解析歌词\r\n        parseLyric(text) {\r\n            let lines = text.split(\"\\n\");\r\n            let pattern = /\\[\\d{2}:\\d{2}.(\\d{3}|\\d{2})\\]/g;\r\n            let result = [];\r\n            for (let item of lines) {\r\n                let value = item.replace(pattern, \"\");\r\n                result.push(value);\r\n            }\r\n            return result;\r\n        },\r\n        //上传歌曲之前的校验\r\n        beforeSongUpload(file) {\r\n            var testMsg = file.name.substring(file.name.lastIndexOf(\".\") + 1);\r\n            if (testMsg != \"mp3\") {\r\n                this.$message({\r\n                    message: \"上传文件只能是mp3格式\",\r\n                    type: \"error\",\r\n                });\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        //上传歌曲成功之后要做的工作\r\n        handleSongSuccess(res) {\r\n            let _this = this;\r\n            if (res.code == 1) {\r\n                _this.getData();\r\n                _this.$notify({\r\n                    title: \"上传成功\",\r\n                    type: \"success\",\r\n                });\r\n            } else {\r\n                _this.$notify({\r\n                    title: \"上传失败\",\r\n                    type: \"error\",\r\n                });\r\n            }\r\n        },\r\n        //更新歌曲url\r\n        uploadSongUrl(id) {\r\n            return `${this.$store.state.HOST}/song/updateSongUrl?id=${id}`;\r\n        },\r\n        //切换播放歌曲\r\n        setSongUrl(url, name) {\r\n            this.toggle = name;\r\n            this.$store.commit(\"setUrl\", this.$store.state.HOST + url);\r\n            if (this.isPlay) {\r\n                this.$store.commit(\"setIsPlay\", false);\r\n            } else {\r\n                this.$store.commit(\"setIsPlay\", true);\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.handle-box {\r\n    margin-bottom: 20px;\r\n}\r\n.song-img {\r\n    width: 100%;\r\n    height: 80px;\r\n    border-radius: 5px;\r\n    margin-bottom: 5px;\r\n    overflow: hidden;\r\n}\r\n.handle-input {\r\n    width: 300px;\r\n    display: inline-block;\r\n}\r\n.pagination {\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n.play {\r\n    position: absolute;\r\n    z-index: 100;\r\n    width: 80px;\r\n    height: 80px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    top: 18px;\r\n    left: 15px;\r\n}\r\n\r\n.icon {\r\n    width: 2em;\r\n    height: 2em;\r\n    color: white;\r\n    fill: currentColor;\r\n    overflow: hidden;\r\n}\r\n</style>"]}]}