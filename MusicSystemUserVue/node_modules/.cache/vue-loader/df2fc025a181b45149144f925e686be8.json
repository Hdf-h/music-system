{"remainingRequest":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/src/pages/Singer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/src/pages/Singer.vue","mtime":1678901196000},{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1696214897279},{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1696214897741}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgQ29udGVudExpc3QgZnJvbSAnLi4vY29tcG9uZW50cy9Db250ZW50TGlzdCc7DQppbXBvcnQge2dldEFsbFNpbmdlcixnZXRTaW5nZXJPZlNleH0gZnJvbSAnLi4vYXBpL2luZGV4JzsNCmltcG9ydCB7bWl4aW59IGZyb20gIi4uL21peGlucyI7DQppbXBvcnQge3NpbmdlclN0eWxlfSBmcm9tICcuLi9hc3NldHMvZGF0YS9zaW5nZXInOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogICAgbmFtZTogJ3NpbmdlcicsDQogICAgY29tcG9uZW50czp7DQogICAgICAgIENvbnRlbnRMaXN0DQogICAgfSwNCiAgICBkYXRhKCl7DQogICAgICAgIHJldHVybnsNCiAgICAgICAgICAgIGFsYnVtRGF0YXM6IFtdLCAgICAgIC8v5q2M5omL5pWw5o2uDQogICAgICAgICAgICBwYWdlU2l6ZTogMTUsICAgICAgICAvL+mhtemdouWkp+Wwj++8jOS4gOmhteaciTE15p2h5pWw5o2uDQogICAgICAgICAgICBjdXJyZW50UGFnZTogMSwgICAgICAvL+W9k+WJjemhte+8jOm7mOiupOesrOS4gOmhtQ0KICAgICAgICAgICAgc2luZ2VyU3R5bGU6IFtdLCAgICAgICAgICAgLy/po47moLwNCiAgICAgICAgICAgIGFjdGl2ZU5hbWU6ICflhajpg6jmrYzmiYsnICAgIC8v5b2T5YmN6aOO5qC8DQogICAgICAgIH0NCiAgICB9LA0KICAgIGNvbXB1dGVkOnsNCiAgICAgICAgLy/orqHnrpflvZPliY3ooajmoLzkuK3nmoTmlbDmja4NCiAgICAgICAgZGF0YSgpew0KICAgICAgICAgICAgcmV0dXJuIHRoaXMuYWxidW1EYXRhcy5zbGljZSgodGhpcy5jdXJyZW50UGFnZSAtIDEpKnRoaXMucGFnZVNpemUsdGhpcy5jdXJyZW50UGFnZSp0aGlzLnBhZ2VTaXplKQ0KICAgICAgICB9DQogICAgfSwNCiAgICBtb3VudGVkKCl7DQogICAgICAgIHRoaXMuc2luZ2VyU3R5bGUgPSBzaW5nZXJTdHlsZTsNCiAgICAgICAgdGhpcy5nZXRTaW5nZXJMaXN0KCk7DQogICAgfSwNCg0KICAgIG1ldGhvZHM6ew0KICAgICAgICBnZXRTaW5nZXJMaXN0KCl7ICAgICAgICAgICAgDQogICAgICAgICAgICBnZXRBbGxTaW5nZXIoKQ0KICAgICAgICAgICAgICAgIC50aGVuKHJlcyA9PnsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50UGFnZSA9IDE7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuYWxidW1EYXRhcyA9IHJlczsNCiAgICAgICAgICAgICAgICB9KSAgICAgICAgICAgDQogICAgICAgIH0sDQogICAgICAgIC8v6I635Y+W5b2T5YmN6aG1DQogICAgICAgIGhhbmRsZUN1cnJlbnRDaGFuZ2UodmFsKXsNCiAgICAgICAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSB2YWw7DQogICAgICAgIH0sDQogICAgICAgIC8v5qC55o2u57G75Z6L5pi+56S65a+55bqU55qE5q2M5omLDQogICAgICAgIGhhbmRsZUNoYW5nZVZpZXcoaXRlbSl7DQogICAgICAgICAgICB0aGlzLmFjdGl2ZU5hbWUgPSBpdGVtLm5hbWU7DQogICAgICAgICAgICB0aGlzLmFsYnVtRGF0YXMgPSBbXTsNCiAgICAgICAgICAgIGlmKGl0ZW0ubmFtZSA9PSAn5YWo6YOo5q2M5omLJyl7DQogICAgICAgICAgICAgICAgdGhpcy5nZXRTaW5nZXJMaXN0KCk7DQogICAgICAgICAgICB9ZWxzZXsNCiAgICAgICAgICAgICAgICB0aGlzLmdldFNpbmdlck9mU2V4KGl0ZW0udHlwZSkNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgLy/moLnmja7mgKfliKvmn6Xor6Llr7nlupTnmoTmrYzmiYsNCiAgICAgICAgZ2V0U2luZ2VyT2ZTZXgoc2V4KXsNCiAgICAgICAgICAgIGdldFNpbmdlck9mU2V4KHNleCkNCiAgICAgICAgICAgICAgICAudGhlbihyZXMgPT57DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRQYWdlID0gMTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWxidW1EYXRhcyA9IHJlczsNCiAgICAgICAgICAgICAgICAgICAgfSkgDQogICAgICAgIH0sDQoNCiAgICB9DQp9DQo="},{"version":3,"sources":["Singer.vue"],"names":[],"mappings":";AAmBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Singer.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div class=\"singer\">\r\n        <ul class=\"singer-header\">\r\n            <li v-for=\"(item,index) in singerStyle\" :key=\"index\" @click=\"handleChangeView(item)\"\r\n                :class=\"{active:item.name==activeName}\">\r\n                {{item.name}}\r\n            </li>\r\n        </ul>\r\n        <div>\r\n            <content-list :contentList=\"data\"></content-list>\r\n            <div class=\"pagination\">\r\n                <el-pagination @current-change=\"handleCurrentChange\" background layout=\"total,prev,pager,next\"\r\n                        :current-page=\"currentPage\" :page-size=\"pageSize\" :total=\"albumDatas.length\">\r\n                </el-pagination>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport ContentList from '../components/ContentList';\r\nimport {getAllSinger,getSingerOfSex} from '../api/index';\r\nimport {mixin} from \"../mixins\";\r\nimport {singerStyle} from '../assets/data/singer';\r\n\r\nexport default {\r\n    name: 'singer',\r\n    components:{\r\n        ContentList\r\n    },\r\n    data(){\r\n        return{\r\n            albumDatas: [],      //歌手数据\r\n            pageSize: 15,        //页面大小，一页有15条数据\r\n            currentPage: 1,      //当前页，默认第一页\r\n            singerStyle: [],           //风格\r\n            activeName: '全部歌手'    //当前风格\r\n        }\r\n    },\r\n    computed:{\r\n        //计算当前表格中的数据\r\n        data(){\r\n            return this.albumDatas.slice((this.currentPage - 1)*this.pageSize,this.currentPage*this.pageSize)\r\n        }\r\n    },\r\n    mounted(){\r\n        this.singerStyle = singerStyle;\r\n        this.getSingerList();\r\n    },\r\n\r\n    methods:{\r\n        getSingerList(){            \r\n            getAllSinger()\r\n                .then(res =>{\r\n                    this.currentPage = 1;\r\n                    this.albumDatas = res;\r\n                })           \r\n        },\r\n        //获取当前页\r\n        handleCurrentChange(val){\r\n            this.currentPage = val;\r\n        },\r\n        //根据类型显示对应的歌手\r\n        handleChangeView(item){\r\n            this.activeName = item.name;\r\n            this.albumDatas = [];\r\n            if(item.name == '全部歌手'){\r\n                this.getSingerList();\r\n            }else{\r\n                this.getSingerOfSex(item.type)\r\n            }\r\n        },\r\n        //根据性别查询对应的歌手\r\n        getSingerOfSex(sex){\r\n            getSingerOfSex(sex)\r\n                .then(res =>{\r\n                        this.currentPage = 1;\r\n                        this.albumDatas = res;\r\n                    }) \r\n        },\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '../assets/css/singer.scss';\r\n</style>"]}]}