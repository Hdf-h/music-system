{"remainingRequest":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/src/pages/SongListAlbum.vue?vue&type=style&index=0&id=2cdcee30&lang=scss&scoped=true&","dependencies":[{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/src/pages/SongListAlbum.vue","mtime":1696063594000},{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1696214897573},{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1696214897953},{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":1696214897671},{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/sass-loader/dist/cjs.js","mtime":1696215557244},{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1696214897279},{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1696214897741}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpAaW1wb3J0ICcuLi9hc3NldHMvY3NzL3NvbmctbGlzdC1hbGJ1bS5zY3NzJzsNCg=="},{"version":3,"sources":["SongListAlbum.vue"],"names":[],"mappings":";AA6IA","file":"SongListAlbum.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div class=\"song-list-album\">\r\n        <div class=\"album-slide\">\r\n            <div class=\"album-img\">\r\n                <img :src=\"attachImageUrl(tempList.pic)\">\r\n            </div>\r\n            <div class=\"album-info\">\r\n                <h2>简介：</h2>\r\n                <span>\r\n                    {{tempList.introduction}}\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <div class=\"album-content\">\r\n            <div class=\"album-title\">\r\n                <p>{{tempList.title}}</p>\r\n            </div>\r\n            <div class=\"album-score\">\r\n                <div>\r\n                    <h3>歌单评分：</h3>\r\n                    <div>\r\n                        <el-rate v-model=\"average\" disabled></el-rate>\r\n                    </div>                    \r\n                </div>\r\n                <span>{{average*2}}</span>\r\n                <div>\r\n                    <h3>评价：</h3>\r\n                    <div @click=\"setRank\">\r\n                        <el-rate v-model=\"rank\" allow-half show-text></el-rate>\r\n                    </div>                    \r\n                </div>\r\n            </div>\r\n            <div class=\"songs-body\">\r\n                <album-content :songList=\"listOfSongs\">\r\n                    <template slot=\"title\">\r\n                <i class=\"iconfont icon-r-list\" style=\"font-size: 26px\"></i>\r\n                <b style=\"font-size: 24px\"> 歌单</b></template>\r\n                </album-content>\r\n                <comment :playId=\"songListId\" :type=\"1\"></comment>\r\n            </div>\r\n        </div>        \r\n    </div>\r\n</template>\r\n<script>\r\nimport {mixin} from '../mixins';\r\nimport {mapGetters} from 'vuex';\r\nimport {listSongDetail,songOfSongId,setRank,getRankOfSongListId} from '../api/index';\r\nimport AlbumContent from \"../components/AlbumContent\";\r\nimport Comment from \"../components/Comment\";\r\n\r\nexport default {\r\n    name: 'song-list-album',\r\n    mixins: [mixin],\r\n    components:{\r\n        AlbumContent,\r\n        Comment\r\n    },\r\n    data(){\r\n        return {\r\n            songLists: [],      //当前页面需要展示的歌曲列表\r\n            songListId: '',    //前面传来的歌单id\r\n            average: 0,         //平均分\r\n            rank:  0            //提交评价的分数\r\n        }\r\n    },\r\n    computed:{\r\n        ...mapGetters([\r\n            'listOfSongs',      //当前播放列表\r\n            'tempList',         //当前歌单对象\r\n            'loginIn',          //用户是否已登录\r\n            'userId',           //当前登录用户id\r\n        ])\r\n    },\r\n    created(){\r\n        this.songListId = this.$route.params.id;\r\n        this.getSongId();\r\n        this.getRank(this.songListId);\r\n    },\r\n    methods:{\r\n        //获取当前歌单的歌曲列表\r\n        getSongId(){\r\n            listSongDetail(this.songListId)\r\n                .then(res => {\r\n                    for(let item of res){\r\n                        this.getSongList(item.songId);\r\n                    }\r\n                    this.$store.commit('setListOfSongs',this.songLists);\r\n                })\r\n                .catch(err =>{\r\n                    console.log(err)\r\n                })\r\n        },\r\n        //根据歌曲id获取歌曲信息\r\n        getSongList(id){\r\n            songOfSongId(id)\r\n                .then(res => {\r\n                    this.songLists.push(res);\r\n                })\r\n                .catch(err =>{\r\n                    console.log(err)\r\n                })\r\n        },\r\n        //获取歌单评分\r\n        getRank(id){\r\n            getRankOfSongListId(id)\r\n                .then(res => {\r\n                    this.average = res/2;\r\n                })\r\n                .catch(err =>{\r\n                    console.log(err)\r\n                })\r\n        },\r\n        //提交评分\r\n        setRank(){\r\n            if(this.loginIn){\r\n                let params = new URLSearchParams();\r\n                params.append('songListId',this.songListId);\r\n                params.append('consumerId',this.userId);\r\n                params.append('score',this.rank *2);\r\n                setRank(params)\r\n                    .then(res => {\r\n                        if(res.code == 1){\r\n                            this.notify('评分成功','success');\r\n                            this.getRank(this.songListId);\r\n                        }else{\r\n                            this.notify('评分失败','error');\r\n                        }\r\n                    })\r\n                    .catch(err =>{\r\n                        this.notify('您已经评价过啦','error');\r\n                    })\r\n            }else{\r\n                this.rank = null;\r\n                 this.notify('请先登录','warning');\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '../assets/css/song-list-album.scss';\r\n</style>\r\n"]}]}