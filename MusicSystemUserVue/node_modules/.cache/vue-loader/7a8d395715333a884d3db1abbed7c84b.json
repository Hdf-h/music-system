{"remainingRequest":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/src/pages/SongList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/src/pages/SongList.vue","mtime":1678901196000},{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1696214897279},{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1696214897741}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgQ29udGVudExpc3QgZnJvbSAnLi4vY29tcG9uZW50cy9Db250ZW50TGlzdCc7DQppbXBvcnQge2dldEFsbFNvbmdMaXN0LGdldFNvbmdMaXN0T2ZMaWtlU3R5bGV9IGZyb20gJy4uL2FwaS9pbmRleCc7DQppbXBvcnQge21peGlufSBmcm9tICIuLi9taXhpbnMiOw0KaW1wb3J0IHtzb25nU3R5bGV9IGZyb20gJy4uL2Fzc2V0cy9kYXRhL3NvbmdMaXN0JzsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICAgIG5hbWU6ICdzb25nLWxpc3QnLA0KICAgIGNvbXBvbmVudHM6ew0KICAgICAgICBDb250ZW50TGlzdA0KICAgIH0sDQogICAgZGF0YSgpew0KICAgICAgICByZXR1cm57DQogICAgICAgICAgICBhbGJ1bURhdGFzOiBbXSwgICAgICAvL+atjOWNleaVsOaNrg0KICAgICAgICAgICAgcGFnZVNpemU6IDE1LCAgICAgICAgLy/pobXpnaLlpKflsI/vvIzkuIDpobXmnIkxNeadoeaVsOaNrg0KICAgICAgICAgICAgY3VycmVudFBhZ2U6IDEsICAgICAgLy/lvZPliY3pobXvvIzpu5jorqTnrKzkuIDpobUNCiAgICAgICAgICAgIHNvbmdTdHlsZTogW10sICAgICAgICAgICAvL+mjjuagvA0KICAgICAgICAgICAgYWN0aXZlTmFtZTogJ+WFqOmDqOatjOWNlScgICAgLy/lvZPliY3po47moLwNCiAgICAgICAgfQ0KICAgIH0sDQogICAgY29tcHV0ZWQ6ew0KICAgICAgICAvL+iuoeeul+W9k+WJjeihqOagvOS4reeahOaVsOaNrg0KICAgICAgICBkYXRhKCl7DQogICAgICAgICAgICByZXR1cm4gdGhpcy5hbGJ1bURhdGFzLnNsaWNlKCh0aGlzLmN1cnJlbnRQYWdlIC0gMSkqdGhpcy5wYWdlU2l6ZSx0aGlzLmN1cnJlbnRQYWdlKnRoaXMucGFnZVNpemUpDQogICAgICAgIH0NCiAgICB9LA0KICAgIG1vdW50ZWQoKXsNCiAgICAgICAgdGhpcy5zb25nU3R5bGUgPSBzb25nU3R5bGU7DQogICAgICAgIHRoaXMuZ2V0U29uZ0xpc3QoKTsNCiAgICB9LA0KDQogICAgbWV0aG9kczp7DQogICAgICAgIGdldFNvbmdMaXN0KCl7ICAgICAgICAgICAgDQogICAgICAgICAgICBnZXRBbGxTb25nTGlzdCgpDQogICAgICAgICAgICAgICAgLnRoZW4ocmVzID0+ew0KICAgICAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRQYWdlID0gMTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5hbGJ1bURhdGFzID0gcmVzOw0KICAgICAgICAgICAgICAgIH0pICAgICAgICAgICANCiAgICAgICAgfSwNCiAgICAgICAgLy/ojrflj5blvZPliY3pobUNCiAgICAgICAgaGFuZGxlQ3VycmVudENoYW5nZSh2YWwpew0KICAgICAgICAgICAgdGhpcy5jdXJyZW50UGFnZSA9IHZhbDsNCiAgICAgICAgfSwNCiAgICAgICAgLy/moLnmja5zdHlsZeaYvuekuuWvueW6lOeahOatjOWNlQ0KICAgICAgICBoYW5kbGVDaGFuZ2VWaWV3KG5hbWUpew0KICAgICAgICAgICAgdGhpcy5hY3RpdmVOYW1lID0gbmFtZTsNCiAgICAgICAgICAgIHRoaXMuYWxidW1EYXRhcyA9IFtdOw0KICAgICAgICAgICAgaWYobmFtZSA9PSAn5YWo6YOo5q2M5Y2VJyl7DQogICAgICAgICAgICAgICAgdGhpcy5nZXRTb25nTGlzdCgpOw0KICAgICAgICAgICAgfWVsc2V7DQogICAgICAgICAgICAgICAgdGhpcy5nb1NvbmdMaXN0T2ZTdHlsZShuYW1lKQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICAvL+agueaNrnN0eWxl5p+l6K+i5a+55bqU55qE5q2M5Y2VDQogICAgICAgIGdvU29uZ0xpc3RPZlN0eWxlKHN0eWxlKXsNCiAgICAgICAgICAgIGdldFNvbmdMaXN0T2ZMaWtlU3R5bGUoc3R5bGUpDQogICAgICAgICAgICAgICAgLnRoZW4ocmVzID0+ew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50UGFnZSA9IDE7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFsYnVtRGF0YXMgPSByZXM7DQogICAgICAgICAgICAgICAgICAgIH0pIA0KICAgICAgICB9LA0KDQogICAgfQ0KfQ0K"},{"version":3,"sources":["SongList.vue"],"names":[],"mappings":";AAmBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"SongList.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div class=\"song-list\">\r\n        <ul class=\"song-list-header\">\r\n            <li v-for=\"(item,index) in songStyle\" :key=\"index\" @click=\"handleChangeView(item.name)\"\r\n                :class=\"{active:item.name==activeName}\">\r\n                {{item.name}}\r\n            </li>\r\n        </ul>\r\n        <div>\r\n            <content-list :contentList=\"data\"></content-list>\r\n            <div class=\"pagination\">\r\n                <el-pagination @current-change=\"handleCurrentChange\" background layout=\"total,prev,pager,next\"\r\n                        :current-page=\"currentPage\" :page-size=\"pageSize\" :total=\"albumDatas.length\">\r\n                </el-pagination>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport ContentList from '../components/ContentList';\r\nimport {getAllSongList,getSongListOfLikeStyle} from '../api/index';\r\nimport {mixin} from \"../mixins\";\r\nimport {songStyle} from '../assets/data/songList';\r\n\r\nexport default {\r\n    name: 'song-list',\r\n    components:{\r\n        ContentList\r\n    },\r\n    data(){\r\n        return{\r\n            albumDatas: [],      //歌单数据\r\n            pageSize: 15,        //页面大小，一页有15条数据\r\n            currentPage: 1,      //当前页，默认第一页\r\n            songStyle: [],           //风格\r\n            activeName: '全部歌单'    //当前风格\r\n        }\r\n    },\r\n    computed:{\r\n        //计算当前表格中的数据\r\n        data(){\r\n            return this.albumDatas.slice((this.currentPage - 1)*this.pageSize,this.currentPage*this.pageSize)\r\n        }\r\n    },\r\n    mounted(){\r\n        this.songStyle = songStyle;\r\n        this.getSongList();\r\n    },\r\n\r\n    methods:{\r\n        getSongList(){            \r\n            getAllSongList()\r\n                .then(res =>{\r\n                    this.currentPage = 1;\r\n                    this.albumDatas = res;\r\n                })           \r\n        },\r\n        //获取当前页\r\n        handleCurrentChange(val){\r\n            this.currentPage = val;\r\n        },\r\n        //根据style显示对应的歌单\r\n        handleChangeView(name){\r\n            this.activeName = name;\r\n            this.albumDatas = [];\r\n            if(name == '全部歌单'){\r\n                this.getSongList();\r\n            }else{\r\n                this.goSongListOfStyle(name)\r\n            }\r\n        },\r\n        //根据style查询对应的歌单\r\n        goSongListOfStyle(style){\r\n            getSongListOfLikeStyle(style)\r\n                .then(res =>{\r\n                        this.currentPage = 1;\r\n                        this.albumDatas = res;\r\n                    }) \r\n        },\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '../assets/css/song-list.scss';\r\n</style>"]}]}