{"remainingRequest":"F:\\外包项目重置\\音乐管理系统\\影院管理系统\\MusicSystem\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\外包项目重置\\音乐管理系统\\影院管理系统\\MusicSystem\\MusicSystemUserVue\\src\\pages\\Lyric.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\外包项目重置\\音乐管理系统\\影院管理系统\\MusicSystem\\MusicSystemUserVue\\src\\pages\\Lyric.vue","mtime":1679672496000},{"path":"F:\\外包项目重置\\音乐管理系统\\影院管理系统\\MusicSystem\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696214897000},{"path":"F:\\外包项目重置\\音乐管理系统\\影院管理系统\\MusicSystem\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1696214897000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyBtaXhpbiB9IGZyb20gIi4uL21peGlucyI7DQppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAidnVleCI7DQppbXBvcnQgeyBzb25nT2ZTb25nSWQgfSBmcm9tICIuLi9hcGkvaW5kZXgiOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJseXJpYyIsDQogIG1peGluczogW21peGluXSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgbHlyOiBbXSwgLy/lvZPliY3mrYzmm7LnmoTmrYzor40NCiAgICAgIHNvbmdJZDogIiIsIC8v5b2T5YmN5q2M5puyaWQNCiAgICB9Ow0KICB9LA0KICBjb21wdXRlZDogew0KICAgIC4uLm1hcEdldHRlcnMoWw0KICAgICAgImN1clRpbWUiLCAvL+W9k+WJjeatjOabsuaSreaUvuWIsOeahOS9jee9rg0KICAgICAgImlkIiwgLy/lvZPliY3mkq3mlL7nmoTmrYzmm7JpZA0KICAgICAgImx5cmljIiwgLy/mrYzor40NCiAgICAgICJsaXN0SW5kZXgiLCAvL+W9k+WJjeatjOabsuWcqOatjOWNleS4reeahOS9jee9rg0KICAgICAgImxpc3RPZlNvbmdzIiwgLy/lvZPliY3mrYzljZXliJfooagNCiAgICBdKSwNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIHJlcGxhY2VMTmFtZShzdHIpIHsNCiAgICAgIGxldCBhcnIgPSBzdHIuc3BsaXQoIi0iKTsNCiAgICAgIHJldHVybiBhcnJbMF07DQogICAgfSwNCiAgICAvL+iOt+WPluWQjeWtl+WQjuWNiumDqOWIhi0t5q2M5ZCNDQogICAgcmVwbGFjZUZOYW1lKHN0cikgew0KICAgICAgbGV0IGFyciA9IHN0ci5zcGxpdCgiLSIpOw0KICAgICAgcmV0dXJuIGFyclsxXTsNCiAgICB9LA0KICAgIC8v6Kej5p6Q5q2M6K+NDQogICAgcGFyc2VMeXJpYyh0ZXh0KSB7DQogICAgICBsZXQgbGluZXMgPSB0ZXh0LnNwbGl0KCJcbiIpOyAvL+WwhuatjOivjeaMieihjOWIhuino+aIkOaVsOe7hA0KICAgICAgbGV0IHBhdHRlcm4gPSAvXFtcZHsyfTpcZHsyfS4oXGR7M318XGR7Mn0pXF0vZzsgLy/ml7bpl7TmoLzlvI/nmoTmraPliJnooajovr7lvI8NCiAgICAgIGxldCByZXN1bHQgPSBbXTsgLy/ov5Tlm57lgLwNCiAgICAgIC8v5a+55LqO5q2M6K+N5qC85byP5LiN5a+555qE55u05o6l6L+U5ZueDQogICAgICBpZiAoIS9cWy4rXF0vLnRlc3QodGV4dCkpIHsNCiAgICAgICAgcmV0dXJuIFtbMCwgdGV4dF1dOw0KICAgICAgfQ0KICAgICAgLy/ljrvmjonliY3pnaLmoLzlvI/kuI3mraPnoa7nmoTooYwNCiAgICAgIHdoaWxlICghcGF0dGVybi50ZXN0KGxpbmVzWzBdKSkgew0KICAgICAgICBsaW5lcyA9IGxpbmVzLnNsaWNlKDEpOw0KICAgICAgfQ0KICAgICAgLy/pgY3ljobmr4/kuIDooYzvvIzlvaLmiJDkuIDkuKrmr4/ooYzluKbnnYDkv6nlhYPntKDnmoTmlbDnu4TvvIznrKzkuIDkuKrlhYPntKDmmK/ku6Xnp5LkuLrorqHnrpfljZXkvY3nmoTml7bpl7TvvIznrKzkuozkuKrlhYPntKDmmK/mrYzor40NCiAgICAgIGZvciAobGV0IGl0ZW0gb2YgbGluZXMpIHsNCiAgICAgICAgbGV0IHRpbWUgPSBpdGVtLm1hdGNoKHBhdHRlcm4pOyAvL+WtmOWJjemdoueahOaXtumXtOautQ0KICAgICAgICBsZXQgdmFsdWUgPSBpdGVtLnJlcGxhY2UocGF0dGVybiwgIiIpOyAvL+WtmOWQjumdoueahOatjOivjQ0KICAgICAgICBmb3IgKGxldCBpdGVtMSBvZiB0aW1lKSB7DQogICAgICAgICAgbGV0IHQgPSBpdGVtMS5zbGljZSgxLCAtMSkuc3BsaXQoIjoiKTsgLy/lj5blh7rml7bpl7TvvIzmjaLnrpfmiJDmlbDnu4QNCiAgICAgICAgICBpZiAodmFsdWUgIT0gIiIpIHsNCiAgICAgICAgICAgIHJlc3VsdC5wdXNoKFtwYXJzZUludCh0WzBdLCAxMCkgKiA2MCArIHBhcnNlRmxvYXQodFsxXSksIHZhbHVlXSk7DQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9DQogICAgICAvL+aMieeFp+esrOS4gOS4quWFg+e0oC0t5pe26Ze0LS3mjpLluo8NCiAgICAgIHJlc3VsdC5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7DQogICAgICAgIHJldHVybiBhWzBdIC0gYlswXTsNCiAgICAgIH0pOw0KICAgICAgcmV0dXJuIHJlc3VsdDsNCiAgICB9LA0KICAgIGxvYWRGcm9tUXVlcnkoKSB7DQogICAgICAvLyDku451cmzor7vlj5blj4LmlbANCiAgICAgIHZhciBzb25nSWQgPSB0aGlzLiRyb3V0ZS5xdWVyeS5zb25nSWQ7DQogICAgICBpZiAoc29uZ0lkICE9IG51bGwgJiYgc29uZ0lkICE9ICIiKSB7DQogICAgICAgIHNvbmdPZlNvbmdJZChzb25nSWQpDQogICAgICAgICAgLnRoZW4oKHJlcykgPT4gew0KICAgICAgICAgICAgaWYgKHJlcyA9PSAiIikgew0KICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIHRoaXMudG9wbGF5KHJlcy5pZCwgcmVzLnVybCwgcmVzLnBpYywgMCwgcmVzLm5hbWUsIHJlcy5seXJpYyk7DQogICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoInNldElkIiwgcmVzLmlkKTsNCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgNCiAgICAgICAgICAgICAgInNldFVybCIsDQogICAgICAgICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmNvbmZpZ3VyZS5IT1NUICsgcmVzLnVybA0KICAgICAgICAgICAgKTsNCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgNCiAgICAgICAgICAgICAgInNldFBpY1VybCIsDQogICAgICAgICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmNvbmZpZ3VyZS5IT1NUICsgcmVzLnBpYw0KICAgICAgICAgICAgKTsNCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgic2V0TGlzdEluZGV4IiwgMCk7DQogICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoInNldFRpdGxlIiwgdGhpcy5yZXBsYWNlRk5hbWUocmVzLm5hbWUpKTsNCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgic2V0QXJ0aXN0IiwgdGhpcy5yZXBsYWNlTE5hbWUocmVzLm5hbWUpKTsNCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgic2V0THlyaWMiLCB0aGlzLnBhcnNlTHlyaWMocmVzLmx5cmljKSk7DQogICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoInNldElzQWN0aXZlIiwgZmFsc2UpOw0KICAgICAgICAgICAgdGhpcy5seXIgPSB0aGlzLmx5cmljOw0KDQogICAgICAgICAgICAvLyB0aGlzLmx5ciA9IHRoaXMucGFyc2VMeXJpYyhyZXMubHlyaWMpOw0KICAgICAgICAgIH0pDQogICAgICAgICAgLmNhdGNoKChlcnIpID0+IHsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7DQogICAgICAgICAgfSk7DQogICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgdGhpcy5seXIgPSB0aGlzLmx5cmljOw0KICAgICAgfQ0KICAgIH0sDQogIH0sDQogIG1vdW50ZWQoKSB7DQogICAgdGhpcy5sb2FkRnJvbVF1ZXJ5KCk7DQogIH0sDQogIHdhdGNoOiB7DQogICAgaWQ6IGZ1bmN0aW9uICgpIHsNCiAgICAgIHRoaXMubHlyID0gdGhpcy5wYXJzZUx5cmljKHRoaXMubGlzdE9mU29uZ3NbdGhpcy5saXN0SW5kZXhdLmx5cmljKTsNCiAgICB9LA0KICAgIGN1clRpbWU6IGZ1bmN0aW9uICgpIHsNCiAgICAgIGlmICh0aGlzLmx5ci5sZW5ndGggPiAwKSB7DQogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5seXIubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICBpZiAodGhpcy5jdXJUaW1lID49IHRoaXMubHlyW2ldWzBdKSB7DQogICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHRoaXMubHlyLmxlbmd0aDsgaisrKSB7DQogICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIi5oYXMtbHlyaWMgbGkiKVtqXS5zdHlsZS5jb2xvciA9DQogICAgICAgICAgICAgICAgIiMwMDAiOw0KICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCIuaGFzLWx5cmljIGxpIilbal0uc3R5bGUuZm9udFNpemUgPQ0KICAgICAgICAgICAgICAgICIxNXB4IjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGlmIChpID49IDApIHsNCiAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgiLmhhcy1seXJpYyBsaSIpW2ldLnN0eWxlLmNvbG9yID0NCiAgICAgICAgICAgICAgICAiIzk1ZDJmNiI7DQogICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIi5oYXMtbHlyaWMgbGkiKVtpXS5zdHlsZS5mb250U2l6ZSA9DQogICAgICAgICAgICAgICAgIjI1cHgiOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0sDQogIH0sDQp9Ow0K"},{"version":3,"sources":["Lyric.vue"],"names":[],"mappings":";AAqfile":"Lyric.vue","sourceRoot":"src/pages","sourcesContent":["<!--\r\n * @Description: \r\n * @Author: Rabbiter\r\n * @Date: 2023-03-16 01:26:34\r\n-->\r\n<template>\r\n  <div class=\"song-lyric\">\r\n    <h1 class=\"lyric-title\">歌词</h1>\r\n    <!-- 有歌词 -->\r\n    <ul class=\"has-lyric\" v-if=\"lyr.length\" key=\"index\">\r\n      <li v-for=\"(item, index) in lyr\" v-bind:key=\"index\">\r\n        {{ item[1] }}\r\n      </li>\r\n    </ul>\r\n    <!-- 没有歌词 -->\r\n    <div v-else class=\"no-lyric\" key=\"no-lyric\">\r\n      <span>暂无歌词</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mixin } from \"../mixins\";\r\nimport { mapGetters } from \"vuex\";\r\nimport { songOfSongId } from \"../api/index\";\r\n\r\nexport default {\r\n  name: \"lyric\",\r\n  mixins: [mixin],\r\n  data() {\r\n    return {\r\n      lyr: [], //当前歌曲的歌词\r\n      songId: \"\", //当前歌曲id\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      \"curTime\", //当前歌曲播放到的位置\r\n      \"id\", //当前播放的歌曲id\r\n      \"lyric\", //歌词\r\n      \"listIndex\", //当前歌曲在歌单中的位置\r\n      \"listOfSongs\", //当前歌单列表\r\n    ]),\r\n  },\r\n  methods: {\r\n    replaceLName(str) {\r\n      let arr = str.split(\"-\");\r\n      return arr[0];\r\n    },\r\n    //获取名字后半部分--歌名\r\n    replaceFName(str) {\r\n      let arr = str.split(\"-\");\r\n      return arr[1];\r\n    },\r\n    //解析歌词\r\n    parseLyric(text) {\r\n      let lines = text.split(\"\\n\"); //将歌词按行分解成数组\r\n      let pattern = /\\[\\d{2}:\\d{2}.(\\d{3}|\\d{2})\\]/g; //时间格式的正则表达式\r\n      let result = []; //返回值\r\n      //对于歌词格式不对的直接返回\r\n      if (!/\\[.+\\]/.test(text)) {\r\n        return [[0, text]];\r\n      }\r\n      //去掉前面格式不正确的行\r\n      while (!pattern.test(lines[0])) {\r\n        lines = lines.slice(1);\r\n      }\r\n      //遍历每一行，形成一个每行带着俩元素的数组，第一个元素是以秒为计算单位的时间，第二个元素是歌词\r\n      for (let item of lines) {\r\n        let time = item.match(pattern); //存前面的时间段\r\n        let value = item.replace(pattern, \"\"); //存后面的歌词\r\n        for (let item1 of time) {\r\n          let t = item1.slice(1, -1).split(\":\"); //取出时间，换算成数组\r\n          if (value != \"\") {\r\n            result.push([parseInt(t[0], 10) * 60 + parseFloat(t[1]), value]);\r\n          }\r\n        }\r\n      }\r\n      //按照第一个元素--时间--排序\r\n      result.sort(function (a, b) {\r\n        return a[0] - b[0];\r\n      });\r\n      return result;\r\n    },\r\n    loadFromQuery() {\r\n      // 从url读取参数\r\n      var songId = this.$route.query.songId;\r\n      if (songId != null && songId != \"\") {\r\n        songOfSongId(songId)\r\n          .then((res) => {\r\n            if (res == \"\") {\r\n              return;\r\n            }\r\n\r\n            // this.toplay(res.id, res.url, res.pic, 0, res.name, res.lyric);\r\n            this.$store.commit(\"setId\", res.id);\r\n            this.$store.commit(\r\n              \"setUrl\",\r\n              this.$store.state.configure.HOST + res.url\r\n            );\r\n            this.$store.commit(\r\n              \"setPicUrl\",\r\n              this.$store.state.configure.HOST + res.pic\r\n            );\r\n            this.$store.commit(\"setListIndex\", 0);\r\n            this.$store.commit(\"setTitle\", this.replaceFName(res.name));\r\n            this.$store.commit(\"setArtist\", this.replaceLName(res.name));\r\n            this.$store.commit(\"setLyric\", this.parseLyric(res.lyric));\r\n            this.$store.commit(\"setIsActive\", false);\r\n            this.lyr = this.lyric;\r\n\r\n            // this.lyr = this.parseLyric(res.lyric);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      } else {\r\n            this.lyr = this.lyric;\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.loadFromQuery();\r\n  },\r\n  watch: {\r\n    id: function () {\r\n      this.lyr = this.parseLyric(this.listOfSongs[this.listIndex].lyric);\r\n    },\r\n    curTime: function () {\r\n      if (this.lyr.length > 0) {\r\n        for (let i = 0; i < this.lyr.length; i++) {\r\n          if (this.curTime >= this.lyr[i][0]) {\r\n            for (let j = 0; j < this.lyr.length; j++) {\r\n              document.querySelectorAll(\".has-lyric li\")[j].style.color =\r\n                \"#000\";\r\n              document.querySelectorAll(\".has-lyric li\")[j].style.fontSize =\r\n                \"15px\";\r\n            }\r\n            if (i >= 0) {\r\n              document.querySelectorAll(\".has-lyric li\")[i].style.color =\r\n                \"#95d2f6\";\r\n              document.querySelectorAll(\".has-lyric li\")[i].style.fontSize =\r\n                \"25px\";\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n@import \"../assets/css/lyric.scss\";\r\n</style>"]}]}