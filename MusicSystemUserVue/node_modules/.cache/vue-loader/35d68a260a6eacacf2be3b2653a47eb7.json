{"remainingRequest":"D:\\keshe\\音乐管理系统\\MusicSystem\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\keshe\\音乐管理系统\\MusicSystem\\MusicSystemUserVue\\src\\pages\\SingerAlbum.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\keshe\\音乐管理系统\\MusicSystem\\MusicSystemUserVue\\src\\pages\\SingerAlbum.vue","mtime":1696063558000},{"path":"D:\\keshe\\音乐管理系统\\MusicSystem\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696214897000},{"path":"D:\\keshe\\音乐管理系统\\MusicSystem\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1696214897000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyBtaXhpbiB9IGZyb20gIi4uL21peGlucyI7DQppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAidnVleCI7DQppbXBvcnQgeyBzb25nT2ZTaW5nZXJJZCB9IGZyb20gIi4uL2FwaS9pbmRleCI7DQppbXBvcnQgQWxidW1Db250ZW50IGZyb20gIi4uL2NvbXBvbmVudHMvQWxidW1Db250ZW50IjsNCmV4cG9ydCBkZWZhdWx0IHsNCiAgICBuYW1lOiAic2luZ2VyLWFsYnVtIiwNCiAgICBtaXhpbnM6IFttaXhpbl0sDQogICAgY29tcG9uZW50czogew0KICAgICAgICBBbGJ1bUNvbnRlbnQsDQogICAgfSwNCiAgICBkYXRhKCkgew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgc2luZ2VySWQ6ICIiLCAvL+WJjemdouS8oOadpeeahOatjOaJi2lkDQogICAgICAgICAgICBzaW5nZXI6IHsNCiAgICAgICAgICAgICAgICBuYW1lOiAiIiwNCiAgICAgICAgICAgICAgICBpbnRyb2R1Y3Rpb246ICIiLA0KICAgICAgICAgICAgICAgIGJpcnRoOiAiIiwNCiAgICAgICAgICAgICAgICBzZXg6ICIiLA0KICAgICAgICAgICAgICAgIHBpYzogIiIsDQogICAgICAgICAgICB9LCAvL+W9k+WJjeatjOaJi+S/oeaBrw0KICAgICAgICB9Ow0KICAgIH0sDQogICAgY29tcHV0ZWQ6IHsNCiAgICAgICAgLi4ubWFwR2V0dGVycyhbDQogICAgICAgICAgICAibGlzdE9mU29uZ3MiLCAvL+W9k+WJjeaSreaUvuWIl+ihqA0KICAgICAgICAgICAgInRlbXBMaXN0IiwgLy/lvZPliY3mrYzmiYvlr7nosaENCiAgICAgICAgICAgICJsb2dpbkluIiwgLy/nlKjmiLfmmK/lkKblt7LnmbvlvZUNCiAgICAgICAgICAgICJ1c2VySWQiLCAvL+W9k+WJjeeZu+W9leeUqOaIt2lkDQogICAgICAgIF0pLA0KICAgIH0sDQogICAgY3JlYXRlZCgpIHsNCiAgICAgICAgdGhpcy5zaW5nZXJJZCA9IHRoaXMuJHJvdXRlLnBhcmFtcy5pZDsNCiAgICAgICAgdGhpcy5zaW5nZXIgPSB0aGlzLnRlbXBMaXN0Ow0KICAgICAgICB0aGlzLmdldFNvbmdPZlNpbmdlcklkKCk7DQogICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICAgIC8v5qC55o2u5q2M5omLaWTmn6Xor6LmrYzmm7INCiAgICAgICAgZ2V0U29uZ09mU2luZ2VySWQoKSB7DQogICAgICAgICAgICBzb25nT2ZTaW5nZXJJZCh0aGlzLnNpbmdlcklkKQ0KICAgICAgICAgICAgICAgIC50aGVuKChyZXMpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCJzZXRMaXN0T2ZTb25ncyIsIHJlcyk7DQogICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgICAgICAuY2F0Y2goKGVycikgPT4gew0KICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpOw0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICB9LA0KICAgICAgICAvL+iOt+WPluaAp+WIqw0KICAgICAgICBhdHRhY2hTZXgodmFsdWUpIHsNCiAgICAgICAgICAgIGlmICh2YWx1ZSA9PSAwKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuICLlpbMiOw0KICAgICAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSA9PSAxKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuICLnlLciOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgcmV0dXJuICIiOw0KICAgICAgICB9LA0KICAgIH0sDQogICAgZmlsdGVyczogew0KICAgICAgICBkYXRlRm9ybWF0KHZhbHVlKSB7DQogICAgICAgICAgICBpZiAoIXZhbHVlKSByZXR1cm4gIiI7DQogICAgICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUodmFsdWUpOw0KICAgICAgICAgICAgY29uc3QgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKTsNCiAgICAgICAgICAgIGxldCBtb250aCA9IGRhdGUuZ2V0TW9udGgoKSArIDE7DQogICAgICAgICAgICBsZXQgZGF5ID0gZGF0ZS5nZXREYXRlKCk7DQoNCiAgICAgICAgICAgIC8vIOaciOOAgeaXpeOAgeWwj+aXtuOAgeWIhumSn+OAgeenkuWwj+S6jjEw5pe26KGlMA0KICAgICAgICAgICAgbW9udGggPSBtb250aCA8IDEwID8gIjAiICsgbW9udGggOiBtb250aDsNCiAgICAgICAgICAgIGRheSA9IGRheSA8IDEwID8gIjAiICsgZGF5IDogZGF5Ow0KICAgICAgICAgICAgcmV0dXJuIHllYXIgKyAiLSIgKyBtb250aCArICItIiArIGRheTsNCiAgICAgICAgfSwNCiAgICB9LA0KfTsNCg=="},{"version":3,"sources":["SingerAlbum.vue"],"names":[],"mappings":";AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SingerAlbum.vue","sourceRoot":"src/pages","sourcesContent":["<!--\r\n * @Description: \r\n * @Author: Rabbiter\r\n * @Date: 2023-03-16 01:26:34\r\n-->\r\n<template>\r\n    <div class=\"singer-album\">\r\n        <div class=\"album-slide\">\r\n            <div class=\"singer-img\">\r\n                <img :src=\"attachImageUrl(singer.pic)\" />\r\n            </div>\r\n            <ul class=\"info\">\r\n                <li v-if=\"singer.sex == 0 || singer.sex == 1\">\r\n                    {{ attachSex(singer.sex) }}\r\n                </li>\r\n                <li>生日：{{ singer.birth | dateFormat }}</li>\r\n                <li>故乡：{{ singer.location }}</li>\r\n            </ul>\r\n        </div>\r\n        <div class=\"album-content\">\r\n            <div class=\"intro\">\r\n                <h2>{{ singer.name }}</h2>\r\n                <span>{{ singer.introduction }}</span>\r\n            </div>\r\n            <div class=\"content\">\r\n                <album-content :songList=\"listOfSongs\">\r\n                    <template slot=\"title\">歌单</template>\r\n                </album-content>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { mixin } from \"../mixins\";\r\nimport { mapGetters } from \"vuex\";\r\nimport { songOfSingerId } from \"../api/index\";\r\nimport AlbumContent from \"../components/AlbumContent\";\r\nexport default {\r\n    name: \"singer-album\",\r\n    mixins: [mixin],\r\n    components: {\r\n        AlbumContent,\r\n    },\r\n    data() {\r\n        return {\r\n            singerId: \"\", //前面传来的歌手id\r\n            singer: {\r\n                name: \"\",\r\n                introduction: \"\",\r\n                birth: \"\",\r\n                sex: \"\",\r\n                pic: \"\",\r\n            }, //当前歌手信息\r\n        };\r\n    },\r\n    computed: {\r\n        ...mapGetters([\r\n            \"listOfSongs\", //当前播放列表\r\n            \"tempList\", //当前歌手对象\r\n            \"loginIn\", //用户是否已登录\r\n            \"userId\", //当前登录用户id\r\n        ]),\r\n    },\r\n    created() {\r\n        this.singerId = this.$route.params.id;\r\n        this.singer = this.tempList;\r\n        this.getSongOfSingerId();\r\n    },\r\n    methods: {\r\n        //根据歌手id查询歌曲\r\n        getSongOfSingerId() {\r\n            songOfSingerId(this.singerId)\r\n                .then((res) => {\r\n                    this.$store.commit(\"setListOfSongs\", res);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        },\r\n        //获取性别\r\n        attachSex(value) {\r\n            if (value == 0) {\r\n                return \"女\";\r\n            } else if (value == 1) {\r\n                return \"男\";\r\n            }\r\n            return \"\";\r\n        },\r\n    },\r\n    filters: {\r\n        dateFormat(value) {\r\n            if (!value) return \"\";\r\n            const date = new Date(value);\r\n            const year = date.getFullYear();\r\n            let month = date.getMonth() + 1;\r\n            let day = date.getDate();\r\n\r\n            // 月、日、小时、分钟、秒小于10时补0\r\n            month = month < 10 ? \"0\" + month : month;\r\n            day = day < 10 ? \"0\" + day : day;\r\n            return year + \"-\" + month + \"-\" + day;\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../assets/css/singer-album.scss\";\r\n</style>\r\n"]}]}