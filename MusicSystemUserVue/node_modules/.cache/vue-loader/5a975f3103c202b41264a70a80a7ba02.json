{"remainingRequest":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/src/components/Comment.vue?vue&type=style&index=0&id=133ed8df&lang=scss&scoped=true&","dependencies":[{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/src/components/Comment.vue","mtime":1696063640000},{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1696214897573},{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1696214897953},{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":1696214897671},{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/sass-loader/dist/cjs.js","mtime":1696215557244},{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1696214897279},{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1696214897741}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpAaW1wb3J0ICIuLi9hc3NldHMvY3NzL2NvbW1lbnQuc2NzcyI7DQo="},{"version":3,"sources":["Comment.vue"],"names":[],"mappings":";AA0KA","file":"Comment.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"comment\">\r\n            <div style=\"width: 100%; text-align: center\">\r\n                <i class=\"iconfont icon-r-team\" style=\"font-size: 36px\"></i>\r\n                <b style=\"font-size: 24px\"> 评论</b>\r\n            </div>\r\n            <div class=\"comment-msg\">\r\n                <div class=\"comment-img\">\r\n                    <img :src=\"attachImageUrl(avator)\" />\r\n                </div>\r\n                <el-input\r\n                    class=\"comment-input\"\r\n                    type=\"textarea\"\r\n                    :rows=\"2\"\r\n                    placeholder=\"请输入内容\"\r\n                    v-model=\"textarea\"\r\n                >\r\n                </el-input>\r\n            </div>\r\n            <el-button type=\"primary\" class=\"sub-btn\" @click=\"postComment\" style=\"font-size: 20px\"\r\n                ><i class=\"iconfont icon-r-yes\" style=\"font-size: 22px\"></i> 评论</el-button\r\n            >\r\n        </div>\r\n        <p>精彩评论：共{{ commentList.length }}条评论</p>\r\n        <ul class=\"popular\" v-for=\"(item, index) in commentList\" :key=\"index\">\r\n            <li>\r\n                <div class=\"popular-img\">\r\n                    <img :src=\"attachImageUrl(userPic[index])\" />\r\n                </div>\r\n                <div class=\"popular-msg\">\r\n                    <ul>\r\n                        <li class=\"name\">{{ userName[index] }}</li>\r\n                        <li class=\"time\">{{ item.createTime }}</li>\r\n                        <li class=\"content\">{{ item.content }}</li>\r\n                    </ul>\r\n                </div>\r\n                <div\r\n                    class=\"up\"\r\n                    ref=\"up\"\r\n                    @click=\"postUp(item.id, item.up, index)\"\r\n                >\r\n                    <svg class=\"icon\">\r\n                        <use xlink:href=\"#icon-zan\"></use>\r\n                    </svg>\r\n                    {{ item.up }}\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mixin } from \"../mixins\";\r\nimport { mapGetters } from \"vuex\";\r\nimport { setComment, setLike, getAllComment, getUserOfId } from \"../api/index\";\r\n\r\nexport default {\r\n    name: \"comment\",\r\n    mixins: [mixin],\r\n    props: [\r\n        \"playId\", // 歌曲或歌单id\r\n        \"type\", // 0歌曲、1歌单\r\n    ],\r\n    computed: {\r\n        ...mapGetters([\r\n            \"id\", // 歌曲或歌单id\r\n            \"loginIn\", // 用户是否已登录\r\n            \"userId\", // 当前登录用户id\r\n            \"avator\", // 当前登录用户头像\r\n        ]),\r\n    },\r\n    data() {\r\n        return {\r\n            textarea: \"\", // 存放输入的评论内容\r\n            commentList: [], // 存放评论列表\r\n            userPic: [], // 用户的头像\r\n            userName: [], // 用户的昵称\r\n        };\r\n    },\r\n    mounted() {\r\n        this.getComment();\r\n    },\r\n    methods: {\r\n        // 提交评论\r\n        postComment() {\r\n            if (this.loginIn) {\r\n                let params = new URLSearchParams();\r\n                // eslint-disable-next-line eqeqeq\r\n                if (this.type == 0) {\r\n                    params.append(\"songId\", this.playId);\r\n                } else {\r\n                    params.append(\"songListId\", this.playId);\r\n                }\r\n                params.append(\"userId\", this.userId);\r\n                params.append(\"type\", this.type);\r\n                params.append(\"content\", this.textarea);\r\n                setComment(params)\r\n                    .then((res) => {\r\n                        // eslint-disable-next-line eqeqeq\r\n                        if (res.code == 1) {\r\n                            this.notify(\"评论成功\", \"success\");\r\n                            this.textarea = \"\";\r\n                            this.getComment();\r\n                        } else {\r\n                            this.notify(\"评论失败\", \"error\");\r\n                        }\r\n                    })\r\n                    .catch((_err) => {\r\n                        this.notify(\"评论失败\", \"error\");\r\n                    });\r\n            } else {\r\n                this.rank = null;\r\n                this.notify(\"请先登录\", \"warning\");\r\n            }\r\n        },\r\n        // 评论列表\r\n        getComment() {\r\n            getAllComment(this.type, this.playId)\r\n                .then((res) => {\r\n                    this.commentList = res;\r\n                    for (let item of res) {\r\n                        this.getUsers(item.userId);\r\n                    }\r\n                })\r\n                .catch((_err) => {\r\n                    this.notify(\"评论加载失败\", \"error\");\r\n                });\r\n        },\r\n        // 获取用户的头像和昵称\r\n        getUsers(id) {\r\n            getUserOfId(id)\r\n                .then((res) => {\r\n                    this.userPic.push(res.avator);\r\n                    this.userName.push(res.username);\r\n                })\r\n                .catch((_err) => {\r\n                    this.notify(\"出错了\", \"error\");\r\n                });\r\n        },\r\n        // 给某一个评论点赞\r\n        postUp(id, up, index) {\r\n            if (this.loginIn) {\r\n                let params = new URLSearchParams();\r\n\r\n                params.append(\"id\", id);\r\n                params.append(\"up\", up + 1);\r\n                setLike(params)\r\n                    .then((res) => {\r\n                        // eslint-disable-next-line eqeqeq\r\n                        if (res.code == 1) {\r\n                            this.$refs.up[index].children[0].style.color =\r\n                                \"#2796cd\";\r\n                            this.getComment();\r\n                        } else {\r\n                            this.notify(\"点赞失败\", \"error\");\r\n                        }\r\n                    })\r\n                    .catch((_err) => {\r\n                        this.notify(\"点赞失败\", \"error\");\r\n                    });\r\n            } else {\r\n                this.rank = null;\r\n                this.notify(\"请先登录\", \"warning\");\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n@import \"../assets/css/comment.scss\";\r\n</style>\r\n"]}]}