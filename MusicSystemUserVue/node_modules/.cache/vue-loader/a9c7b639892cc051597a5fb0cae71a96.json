{"remainingRequest":"F:\\外包项目重置\\音乐管理系统\\影院管理系统\\MusicSystem\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\外包项目重置\\音乐管理系统\\影院管理系统\\MusicSystem\\MusicSystemUserVue\\src\\pages\\SongList.vue?vue&type=style&index=0&id=7c0c3e77&lang=scss&scoped=true&","dependencies":[{"path":"F:\\外包项目重置\\音乐管理系统\\影院管理系统\\MusicSystem\\MusicSystemUserVue\\src\\pages\\SongList.vue","mtime":1678901196000},{"path":"F:\\外包项目重置\\音乐管理系统\\影院管理系统\\MusicSystem\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\css-loader\\dist\\cjs.js","mtime":1696214897000},{"path":"F:\\外包项目重置\\音乐管理系统\\影院管理系统\\MusicSystem\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1696214897000},{"path":"F:\\外包项目重置\\音乐管理系统\\影院管理系统\\MusicSystem\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\postcss-loader\\src\\index.js","mtime":1696214897000},{"path":"F:\\外包项目重置\\音乐管理系统\\影院管理系统\\MusicSystem\\MusicSystemUserVue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1697190997676},{"path":"F:\\外包项目重置\\音乐管理系统\\影院管理系统\\MusicSystem\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696214897000},{"path":"F:\\外包项目重置\\音乐管理系统\\影院管理系统\\MusicSystem\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1696214897000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpAaW1wb3J0ICcuLi9hc3NldHMvY3NzL3NvbmctbGlzdC5zY3NzJzsNCg=="},{"version":3,"sources":["SongList.vue"],"names":[],"mappings":";AAqFA","file":"SongList.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div class=\"song-list\">\r\n        <ul class=\"song-list-header\">\r\n            <li v-for=\"(item,index) in songStyle\" :key=\"index\" @click=\"handleChangeView(item.name)\"\r\n                :class=\"{active:item.name==activeName}\">\r\n                {{item.name}}\r\n            </li>\r\n        </ul>\r\n        <div>\r\n            <content-list :contentList=\"data\"></content-list>\r\n            <div class=\"pagination\">\r\n                <el-pagination @current-change=\"handleCurrentChange\" background layout=\"total,prev,pager,next\"\r\n                        :current-page=\"currentPage\" :page-size=\"pageSize\" :total=\"albumDatas.length\">\r\n                </el-pagination>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport ContentList from '../components/ContentList';\r\nimport {getAllSongList,getSongListOfLikeStyle} from '../api/index';\r\nimport {mixin} from \"../mixins\";\r\nimport {songStyle} from '../assets/data/songList';\r\n\r\nexport default {\r\n    name: 'song-list',\r\n    components:{\r\n        ContentList\r\n    },\r\n    data(){\r\n        return{\r\n            albumDatas: [],      //歌单数据\r\n            pageSize: 15,        //页面大小，一页有15条数据\r\n            currentPage: 1,      //当前页，默认第一页\r\n            songStyle: [],           //风格\r\n            activeName: '全部歌单'    //当前风格\r\n        }\r\n    },\r\n    computed:{\r\n        //计算当前表格中的数据\r\n        data(){\r\n            return this.albumDatas.slice((this.currentPage - 1)*this.pageSize,this.currentPage*this.pageSize)\r\n        }\r\n    },\r\n    mounted(){\r\n        this.songStyle = songStyle;\r\n        this.getSongList();\r\n    },\r\n\r\n    methods:{\r\n        getSongList(){            \r\n            getAllSongList()\r\n                .then(res =>{\r\n                    this.currentPage = 1;\r\n                    this.albumDatas = res;\r\n                })           \r\n        },\r\n        //获取当前页\r\n        handleCurrentChange(val){\r\n            this.currentPage = val;\r\n        },\r\n        //根据style显示对应的歌单\r\n        handleChangeView(name){\r\n            this.activeName = name;\r\n            this.albumDatas = [];\r\n            if(name == '全部歌单'){\r\n                this.getSongList();\r\n            }else{\r\n                this.goSongListOfStyle(name)\r\n            }\r\n        },\r\n        //根据style查询对应的歌单\r\n        goSongListOfStyle(style){\r\n            getSongListOfLikeStyle(style)\r\n                .then(res =>{\r\n                        this.currentPage = 1;\r\n                        this.albumDatas = res;\r\n                    }) \r\n        },\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '../assets/css/song-list.scss';\r\n</style>"]}]}