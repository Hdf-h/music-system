{"remainingRequest":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/src/components/PlayBar.vue?vue&type=style&index=0&id=5f9336bf&lang=scss&scoped=true&","dependencies":[{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/src/components/PlayBar.vue","mtime":1687883684000},{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1696214897573},{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1696214897953},{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":1696214897671},{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/sass-loader/dist/cjs.js","mtime":1696215557244},{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1696214897279},{"path":"/Users/jiawang/售卖项目/影院管理系统/MusicSystem/MusicSystemUserVue/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1696214897741}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpAaW1wb3J0ICIuLi9hc3NldHMvY3NzL3BsYXktYmFyLnNjc3MiOw0K"},{"version":3,"sources":["PlayBar.vue"],"names":[],"mappings":";AA8hBA","file":"PlayBar.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"play-bar\" :class=\"{ show: !toggle }\">\r\n        <div\r\n            @click=\"toggle = !toggle\"\r\n            class=\"item-up\"\r\n            :class=\"{ turn: toggle }\"\r\n        >\r\n            <svg class=\"icon\">\r\n                <use xlink:href=\"#icon-jiantou-shang-cuxiantiao\"></use>\r\n            </svg>\r\n        </div>\r\n        <div class=\"kongjian\">\r\n            <!-- 上一首 -->\r\n            <div class=\"item\" @click=\"prev\">\r\n                <svg class=\"icon\">\r\n                    <use xlink:href=\"#icon-ziyuanldpi\"></use>\r\n                </svg>\r\n            </div>\r\n            <!-- 播放 -->\r\n            <div class=\"item\" @click=\"togglePlay\">\r\n                <svg class=\"icon\">\r\n                    <use :xlink:href=\"playButtonUrl\"></use>\r\n                </svg>\r\n            </div>\r\n            <!-- 下一首 -->\r\n            <div class=\"item\" @click=\"next\">\r\n                <svg class=\"icon\">\r\n                    <use xlink:href=\"#icon-ziyuanldpi1\"></use>\r\n                </svg>\r\n            </div>\r\n            <!-- 歌曲图片 -->\r\n            <div class=\"item-img\" @click=\"toLyric\">\r\n                <img :src=\"picUrl\" />\r\n            </div>\r\n            <!-- 播放进度 -->\r\n            <div class=\"playing-speed\">\r\n                <!-- 播放开始时间 -->\r\n                <div class=\"current-time\">{{ nowTime }}</div>\r\n                <div class=\"progress-box\">\r\n                    <div class=\"item-song-title\">\r\n                        <div>{{ this.title }}</div>\r\n                        <div>{{ this.artist }}</div>\r\n                    </div>\r\n                    <div ref=\"progress\" class=\"progress\" @mousemove=\"mousemove\">\r\n                        <!-- 进度条 -->\r\n                        <div ref=\"bg\" class=\"bg\" @click=\"updatemove\">\r\n                            <div\r\n                                ref=\"curProgress\"\r\n                                class=\"cur-progress\"\r\n                                :style=\"{ width: curLength + '%' }\"\r\n                            ></div>\r\n                        </div>\r\n                        <!-- 拖动的点点 -->\r\n                        <div\r\n                            ref=\"idot\"\r\n                            class=\"idot\"\r\n                            :style=\"{ left: curLength + '%' }\"\r\n                            @mousedown=\"mousedown\"\r\n                            @mouseup=\"mouseup\"\r\n                        ></div>\r\n                    </div>\r\n                </div>\r\n                <!-- 播放结束时间 -->\r\n                <div class=\"left-time\">{{ songTime }}</div>\r\n                <!-- 音量 -->\r\n                <div class=\"item item-volume\">\r\n                    <svg v-if=\"volume == 0\" class=\"icon\">\r\n                        <use xlink:href=\"#icon-yinliangjingyinheix\"></use>\r\n                    </svg>\r\n                    <svg v-else class=\"icon\">\r\n                        <use xlink:href=\"#icon-yinliang1\"></use>\r\n                    </svg>\r\n                    <el-slider\r\n                        class=\"volume\"\r\n                        v-model=\"volume\"\r\n                        :vertical=\"true\"\r\n                    ></el-slider>\r\n                </div>\r\n                <!-- 收藏 -->\r\n                <div class=\"item\" @click=\"collection\">\r\n                    <svg :class=\"{ active: isActive }\" class=\"icon\">\r\n                        <use xlink:href=\"#icon-xihuan-shi\"></use>\r\n                    </svg>\r\n                </div>\r\n                <!-- 分享 -->\r\n                <div class=\"item\" @click=\"share\" style=\"padding-bottom: -5px\">\r\n                    <svg\r\n                        width=\"16\"\r\n                        height=\"19\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        xmlns:svg=\"http://www.w3.org/2000/svg\"\r\n                        xmlns:se=\"http://svg-edit.googlecode.com\"\r\n                        class=\"bi bi-share-fill\"\r\n                        se:nonce=\"62333\"\r\n                    >\r\n                        <g class=\"layer\">\r\n                            <title>Layer 1</title>\r\n                            <path\r\n                                d=\"m11,2.5a2.5,2.5 0 1 1 0.6,1.63l-6.72,3.12a2.5,2.5 0 0 1 0,1.5l6.72,3.12a2.5,2.5 0 1 1 -0.48,0.88l-6.72,-3.12a2.5,2.5 0 1 1 0,-3.26l6.72,-3.12a2.5,2.5 0 0 1 -0.12,-0.75z\"\r\n                                id=\"svg_62333_1\"\r\n                            />\r\n                        </g>\r\n                    </svg>\r\n                </div>\r\n                <!-- 下载 -->\r\n                <div class=\"item\" @click=\"download\">\r\n                    <svg class=\"icon\">\r\n                        <use xlink:href=\"#icon-xiazai\"></use>\r\n                    </svg>\r\n                </div>\r\n                <!-- 当前播放的歌曲列表 -->\r\n                <div class=\"item\" @click=\"changeAside\">\r\n                    <svg class=\"icon\">\r\n                        <use xlink:href=\"#icon-liebiao\"></use>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nimport {\r\n    download,\r\n    setCollect,\r\n    getCollectOfUserId,\r\n    songOfSongId,\r\n} from \"../api/index\";\r\n\r\nexport default {\r\n    name: \"play-bar\",\r\n    data() {\r\n        return {\r\n            nowTime: \"00:00\", //当前播放进度的时间\r\n            songTime: \"00:00\", //当前歌曲总时间\r\n            curLength: 0, //进度条的位置\r\n            progressLength: 0, //进度条的总长度\r\n            mouseStartX: 0, //拖拽开始位置\r\n            tag: false, //拖拽开始结束的标志，当开始拖拽，它的值才会变成true\r\n            volume: 50, //音量，默认一半\r\n            toggle: true, //显示隐藏播放器页面\r\n        };\r\n    },\r\n    computed: {\r\n        ...mapGetters([\r\n            \"id\", //歌曲id\r\n            \"url\", //歌曲地址\r\n            \"isPlay\", //播放状态\r\n            \"playButtonUrl\", //播放状态的图标\r\n            \"picUrl\", //正在播放的音乐的图片\r\n            \"title\", //歌名\r\n            \"artist\", //歌手名\r\n            \"duration\", //音乐时长\r\n            \"curTime\", //当前音乐的播放位置\r\n            \"showAside\", //是否显示播放中的歌曲列表\r\n            \"listIndex\", //当前歌曲在歌单中的位置\r\n            \"listOfSongs\", //当前歌单列表\r\n            \"autoNext\", //自动播放下一首\r\n            \"loginIn\", //用户是否已登录\r\n            \"userId\", //当前登录用户的id\r\n            \"isActive\", //当前播放的歌曲是否已收藏\r\n        ]),\r\n    },\r\n    watch: {\r\n        //切换播放状态的图标\r\n        isPlay() {\r\n            if (this.isPlay) {\r\n                this.$store.commit(\"setPlayButtonUrl\", \"#icon-zanting\");\r\n            } else {\r\n                this.$store.commit(\"setPlayButtonUrl\", \"#icon-bofang\");\r\n            }\r\n        },\r\n        curTime() {\r\n            this.nowTime = this.formatSeconds(this.curTime);\r\n            this.songTime = this.formatSeconds(this.duration);\r\n            this.curLength = (this.curTime / this.duration) * 100;\r\n        },\r\n        //音量变化\r\n        volume() {\r\n            this.$store.commit(\"setVolume\", this.volume / 100);\r\n        },\r\n        //自动播放下一首\r\n        autoNext() {\r\n            this.next();\r\n        },\r\n    },\r\n    mounted() {\r\n        this.progressLength = this.$refs.progress.getBoundingClientRect().width;\r\n        document.querySelector(\".item-volume\").addEventListener(\r\n            \"click\",\r\n            function (e) {\r\n                document.querySelector(\".volume\").classList.add(\"show-volume\");\r\n                e.stopPropagation();\r\n            },\r\n            false\r\n        );\r\n        document.querySelector(\".volume\").addEventListener(\r\n            \"click\",\r\n            function (e) {\r\n                e.stopPropagation();\r\n            },\r\n            false\r\n        );\r\n        document.addEventListener(\r\n            \"click\",\r\n            function () {\r\n                document\r\n                    .querySelector(\".volume\")\r\n                    .classList.remove(\"show-volume\");\r\n            },\r\n            false\r\n        );\r\n    },\r\n    methods: {\r\n        share() {\r\n            //分享\r\n            if (this.id && this.id != \"\") {\r\n                this.copyToClip(\r\n                    \"分享一首《\" +\r\n                        this.title +\r\n                        \"》点击【\" +\r\n                        window.location.origin +\r\n                        \"/#/lyric?songId=\" +\r\n                        this.id +\r\n                        \"】与我一起聆听！\"\r\n                );\r\n            } else {\r\n                this.notify(\"当前未选择音乐。\", \"error\");\r\n            }\r\n        },\r\n        copyToClip(content) {\r\n            var aux = document.createElement(\"input\");\r\n            aux.setAttribute(\"value\", content);\r\n            document.body.appendChild(aux);\r\n            aux.select();\r\n            document.execCommand(\"copy\");\r\n            document.body.removeChild(aux);\r\n            this.notify(\"您已成功获取音乐链接，快去粘贴分享吧。\", \"success\");\r\n\r\n            //   navigator.clipboard.writeText(content).then(() => {\r\n            //     this.notify(\"您已成功获取音乐链接，快去粘贴分享吧。\", \"success\");\r\n            //   });\r\n        },\r\n        //提示信息\r\n        notify(title, type) {\r\n            this.$notify({\r\n                title: title,\r\n                type: type,\r\n            });\r\n        },\r\n        //控制音乐播放、暂停\r\n        togglePlay() {\r\n            if (!this.id || this.id == \"\") {\r\n                this.notify(\"当前未选择音乐。\", \"error\");\r\n                return;\r\n            }\r\n            if (this.isPlay) {\r\n                this.$store.commit(\"setIsPlay\", false);\r\n            } else {\r\n                this.$store.commit(\"setIsPlay\", true);\r\n            }\r\n        },\r\n        //解析时间\r\n        formatSeconds(value) {\r\n            let theTime = parseInt(value);\r\n            let result = \"\"; //返回值\r\n            let hour = parseInt(theTime / 3600); //小时\r\n            let minute = parseInt((theTime / 60) % 60); //分钟\r\n            let second = parseInt(theTime % 60); //秒\r\n            if (hour > 0) {\r\n                if (hour < 10) {\r\n                    result = \"0\" + hour + \":\";\r\n                } else {\r\n                    result = hour + \":\";\r\n                }\r\n            }\r\n            if (minute > 0) {\r\n                if (minute < 10) {\r\n                    result += \"0\" + minute + \":\";\r\n                } else {\r\n                    result += minute + \":\";\r\n                }\r\n            } else {\r\n                result += \"00:\";\r\n            }\r\n            if (second > 0) {\r\n                if (second < 10) {\r\n                    result += \"0\" + second;\r\n                } else {\r\n                    result += second;\r\n                }\r\n            } else {\r\n                result += \"00\";\r\n            }\r\n            return result;\r\n        },\r\n        //拖拽开始\r\n        mousedown(e) {\r\n            if (!this.id || this.id == \"\") {\r\n                return;\r\n            }\r\n            this.mouseStartX = e.clientX;\r\n            this.tag = true;\r\n        },\r\n        //拖拽结束\r\n        mouseup() {\r\n            this.tag = false;\r\n        },\r\n        //拖拽中\r\n        mousemove(e) {\r\n            if (!this.duration) {\r\n                return false;\r\n            }\r\n            if (this.tag) {\r\n                let movementX = e.clientX - this.mouseStartX; //点点移动的距离\r\n                let curLength =\r\n                    this.$refs.curProgress.getBoundingClientRect().width;\r\n                let newPercent =\r\n                    ((movementX + curLength) / this.progressLength) * 100;\r\n                if (newPercent > 100) {\r\n                    newPercent = 100;\r\n                }\r\n                this.curLength = newPercent;\r\n                this.mouseStartX = e.clientX;\r\n                this.changeTime(newPercent);\r\n            }\r\n        },\r\n        //更改歌曲进度\r\n        changeTime(percent) {\r\n            let newCurTime = percent * 0.01 * this.duration;\r\n            this.$store.commit(\"setChangeTime\", newCurTime);\r\n        },\r\n        //点击播放条切换播放进度\r\n        updatemove(e) {\r\n            if (!this.id || this.id == \"\") {\r\n                return;\r\n            }\r\n            if (!this.tag) {\r\n                //进度条的左侧坐标\r\n                let curLength = this.$refs.bg.offsetLeft;\r\n                let newPercent =\r\n                    ((e.clientX - curLength) / this.progressLength) * 100;\r\n                if (newPercent > 100) {\r\n                    newPercent = 100;\r\n                } else if (newPercent < 0) {\r\n                    newPercent = 0;\r\n                }\r\n                this.curLength = newPercent;\r\n                this.changeTime(newPercent);\r\n            }\r\n        },\r\n        //显示播放中的歌曲列表\r\n        changeAside() {\r\n            this.$store.commit(\"setShowAside\", true);\r\n        },\r\n        //上一首\r\n        prev() {\r\n            if (!this.id || this.id == \"\") {\r\n                this.notify(\"当前未选择音乐。\", \"error\");\r\n                return;\r\n            }\r\n            if (this.listIndex != -1 && this.listOfSongs.length > 1) {\r\n                //当前处于不可能状态或者只有只有一首音乐的时候不执行）\r\n                if (this.listIndex > 0) {\r\n                    //不是第一首音乐\r\n                    this.$store.commit(\"setListIndex\", this.listIndex - 1); //直接返回上一首\r\n                } else {\r\n                    //当前是第一首音乐\r\n                    this.$store.commit(\r\n                        \"setListIndex\",\r\n                        this.listOfSongs.length - 1\r\n                    ); //切换到倒数第一首\r\n                }\r\n                this.toplay(this.listOfSongs[this.listIndex].url);\r\n            }\r\n        },\r\n        //下一首\r\n        next() {\r\n            if (!this.id || this.id == \"\") {\r\n                this.notify(\"当前未选择音乐。\", \"error\");\r\n                return;\r\n            }\r\n            if (this.listIndex != -1 && this.listOfSongs.length > 1) {\r\n                //当前处于不可能状态或者只有只有一首音乐的时候不执行）\r\n                if (this.listIndex < this.listOfSongs.length - 1) {\r\n                    //不是最后一首音乐\r\n                    this.$store.commit(\"setListIndex\", this.listIndex + 1); //直接返回下一首\r\n                } else {\r\n                    //当前是最后一首音乐\r\n                    this.$store.commit(\"setListIndex\", 0); //切换到第一首\r\n                }\r\n                this.toplay(this.listOfSongs[this.listIndex].url);\r\n            }\r\n        },\r\n        //播放音乐\r\n        toplay: function (url) {\r\n            if (url && url != this.url) {\r\n                this.$store.commit(\r\n                    \"setId\",\r\n                    this.listOfSongs[this.listIndex].id\r\n                );\r\n                this.$store.commit(\r\n                    \"setUrl\",\r\n                    this.$store.state.configure.HOST + url\r\n                );\r\n                this.$store.commit(\r\n                    \"setPicUrl\",\r\n                    this.$store.state.configure.HOST +\r\n                        this.listOfSongs[this.listIndex].pic\r\n                );\r\n                this.$store.commit(\r\n                    \"setTitle\",\r\n                    this.replaceFName(this.listOfSongs[this.listIndex].name)\r\n                );\r\n                this.$store.commit(\r\n                    \"setArtist\",\r\n                    this.replaceLName(this.listOfSongs[this.listIndex].name)\r\n                );\r\n\r\n                this.$store.commit(\r\n                    \"setLyric\",\r\n                    this.parseLyric(this.listOfSongs[this.listIndex].lyric)\r\n                );\r\n                this.$store.commit(\"setIsActive\", false);\r\n                if (this.loginIn) {\r\n                    getCollectOfUserId(this.userId).then((res) => {\r\n                  console.log(res)\r\n                        for (let item of res) {\r\n                            if (item.songId == this.id) {\r\n                                this.$store.commit(\"setIsActive\", true);\r\n                                break;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        //获取名字前半部分--歌手名\r\n        replaceLName(str) {\r\n            let arr = str.split(\"-\");\r\n            return arr[0];\r\n        },\r\n        //获取名字后半部分--歌名\r\n        replaceFName(str) {\r\n            let arr = str.split(\"-\");\r\n            return arr[1];\r\n        },\r\n        //解析歌词\r\n        parseLyric(text) {\r\n            let lines = text.split(\"\\n\"); //将歌词按行分解成数组\r\n            let pattern = /\\[\\d{2}:\\d{2}.(\\d{3}|\\d{2})\\]/g; //时间格式的正则表达式\r\n            let result = []; //返回值\r\n            //对于歌词格式不对的直接返回\r\n            if (!/\\[.+\\]/.test(text)) {\r\n                return [[0, text]];\r\n            }\r\n            //去掉前面格式不正确的行\r\n            while (!pattern.test(lines[0])) {\r\n                lines = lines.slice(1);\r\n            }\r\n            //遍历每一行，形成一个每行带着俩元素的数组，第一个元素是以秒为计算单位的时间，第二个元素是歌词\r\n            for (let item of lines) {\r\n                let time = item.match(pattern); //存前面的时间段\r\n                let value = item.replace(pattern, \"\"); //存后面的歌词\r\n                if (time == undefined || value == undefined) {\r\n                    continue;\r\n                }\r\n                for (let item1 of time) {\r\n                    let t = item1.slice(1, -1).split(\":\"); //取出时间，换算成数组\r\n                    if (value != \"\") {\r\n                        result.push([\r\n                            parseInt(t[0], 10) * 60 + parseFloat(t[1]),\r\n                            value,\r\n                        ]);\r\n                    }\r\n                }\r\n            }\r\n            //按照第一个元素--时间--排序\r\n            result.sort(function (a, b) {\r\n                return a[0] - b[0];\r\n            });\r\n            return result;\r\n        },\r\n        //转向歌词页面\r\n        toLyric() {\r\n            this.$router.push({ path: `/lyric` });\r\n        },\r\n        //下载音乐\r\n        download() {\r\n            if (!this.id || this.id == \"\") {\r\n                this.notify(\"当前未选择音乐。\", \"error\");\r\n                return;\r\n            }\r\n            download(this.url)\r\n                .then((res) => {\r\n                    let content = res.data;\r\n                    let eleLink = document.createElement(\"a\");\r\n                    eleLink.download = `${this.artist}-${this.title}.mp3`;\r\n                    eleLink.style.display = \"none\";\r\n                    //把字符内容转换成blob地址\r\n                    let blob = new Blob([content]);\r\n                    eleLink.href = URL.createObjectURL(blob);\r\n                    //把链接地址加到document里\r\n                    document.body.appendChild(eleLink);\r\n                    //触发点击\r\n                    eleLink.click();\r\n                    //然后移除掉这个新加的控件\r\n                    document.body.removeChild(eleLink);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        },\r\n        //收藏\r\n        collection() {\r\n            if (!this.id || this.id == \"\") {\r\n                this.notify(\"当前未选择音乐。\", \"error\");\r\n                return;\r\n            }\r\n            if (this.loginIn) {\r\n                var params = new URLSearchParams();\r\n                params.append(\"userId\", this.userId);\r\n                params.append(\"type\", 0);\r\n                params.append(\"songId\", this.id);\r\n                setCollect(params).then((res) => {\r\n                    if (res.code == 1) {\r\n                        this.$store.commit(\"setIsActive\", true);\r\n                        this.notify(\"收藏成功\", \"success\");\r\n                    } else if (res.code == 2) {\r\n                        this.notify(\"已收藏\", \"warning\");\r\n                    } else {\r\n                        this.notify(\"收藏失败\", \"error\");\r\n                    }\r\n                });\r\n            } else {\r\n                this.notify(\"请先登录\", \"warning\");\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n<style  lang=\"scss\" scoped>\r\n@import \"../assets/css/play-bar.scss\";\r\n</style>\r\n"]}]}