{"remainingRequest":"F:\\外包项目重置\\音乐管理系统\\音乐管理系统\\MusicSystem\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\外包项目重置\\音乐管理系统\\音乐管理系统\\MusicSystem\\MusicSystemUserVue\\src\\components\\TheHeader.vue?vue&type=style&index=0&id=9a9f6144&lang=scss&scoped=true&","dependencies":[{"path":"F:\\外包项目重置\\音乐管理系统\\音乐管理系统\\MusicSystem\\MusicSystemUserVue\\src\\components\\TheHeader.vue","mtime":1696063260000},{"path":"F:\\外包项目重置\\音乐管理系统\\音乐管理系统\\MusicSystem\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\css-loader\\dist\\cjs.js","mtime":1696214897000},{"path":"F:\\外包项目重置\\音乐管理系统\\音乐管理系统\\MusicSystem\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1696214897000},{"path":"F:\\外包项目重置\\音乐管理系统\\音乐管理系统\\MusicSystem\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\postcss-loader\\src\\index.js","mtime":1696214897000},{"path":"F:\\外包项目重置\\音乐管理系统\\音乐管理系统\\MusicSystem\\MusicSystemUserVue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1697190997676},{"path":"F:\\外包项目重置\\音乐管理系统\\音乐管理系统\\MusicSystem\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696214897000},{"path":"F:\\外包项目重置\\音乐管理系统\\音乐管理系统\\MusicSystem\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1696214897000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpAaW1wb3J0ICcuLi9hc3NldHMvY3NzL3RoZS1oZWFkZXIuc2Nzcyc7DQo="},{"version":3,"sources":["TheHeader.vue"],"names":[],"mappings":";AAoHA","file":"TheHeader.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"the-header\">\r\n    <div class=\"header-logo\" @click=\"goHome\">\r\n        <img :src=\"require('../assets/img/logo02.jpg')\" style=\"height: 30px;\">\r\n        <span>音乐网</span>\r\n    </div>\r\n    <ul class=\"navbar\">\r\n        <li :class=\"{active: item.name == activeName}\" v-for=\"item in navMsg\" :key=\"item.path\" @click=\"goPage(item.path,item.name)\">\r\n            {{item.name}}\r\n        </li>\r\n        <li>\r\n            <div class=\"header-search\">\r\n                <input type=\"text\" placeholder=\"搜索音乐\" @keyup.enter=\"goSearch()\" v-model=\"keywords\">\r\n                <div class=\"search-btn\" @click=\"goSearch()\">\r\n                    <!-- <svg class=\"icon\">\r\n                        <use xlink:href = \"#icon-sousuo\"></use>\r\n                    </svg> -->\r\n                    <i class=\"iconfont icon-r-find\" style=\"font-size: 28px;color:white;\"></i> \r\n                </div>\r\n            </div>\r\n        </li>\r\n        <li v-show=\"!loginIn\" :class=\"{active: item.name == activeName}\" v-for=\"item in loginMsg\" :key=\"item.path\" @click=\"goPage(item.path,item.name)\">\r\n            {{item.name}}\r\n        </li>\r\n    </ul>\r\n    <div class=\"header-right\" v-show=\"loginIn\">\r\n        <div id='user'>\r\n            <img :src='attachImageUrl(avator)'>\r\n        </div>\r\n        <ul class=\"menu\">\r\n            <li v-for=\"(item,index) in menuList\" :key=\"index\" @click=\"goMenuList(item.path)\">{{item.name}}</li>\r\n        </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapGetters} from 'vuex';\r\nimport {navMsg,loginMsg,menuList} from '../assets/data/header';\r\n\r\nexport default {\r\n  name: 'the-header',\r\n  data() {\r\n      return {\r\n          navMsg: [],    //左侧导航栏\r\n          keywords: '',  //搜索关键字\r\n          loginMsg: [],  //右侧导航栏\r\n          menuList: [], //用户下拉菜单\r\n      }\r\n  },\r\n  computed:{\r\n      ...mapGetters([\r\n          'activeName',\r\n          'loginIn',\r\n          'avator'\r\n      ])\r\n  },\r\n  created() {\r\n      this.navMsg = navMsg;\r\n      this.loginMsg = loginMsg;\r\n      this.menuList = menuList;\r\n  },\r\n  mounted(){\r\n      document.querySelector('#user').addEventListener('click',function(e){\r\n          document.querySelector('.menu').classList.add(\"show\");\r\n          e.stopPropagation()           //关键在于阻止冒泡\r\n      },false);\r\n      document.querySelector('.menu').addEventListener('click',function(e){\r\n          e.stopPropagation()           //点击菜单内部时，阻止时间冒泡，这样，点击内部时，菜单不会关闭\r\n      },false);\r\n      document.addEventListener('click',function(){\r\n        document.querySelector('.menu').classList.remove('show');\r\n      },false);\r\n  },\r\n\r\n  methods: {\r\n       //提示信息\r\n        notify(title,type) {\r\n            this.$notify({\r\n                title: title,\r\n                type: type\r\n            })\r\n        },\r\n      goHome() {\r\n          this.$router.push({path: \"/\"});\r\n      },\r\n      goPage(path,name) {\r\n          if(!this.loginIn && path=='/my-music'){\r\n              this.notify('请先登录','warning');\r\n          }else{\r\n            this.$store.commit('setActiveName',name);\r\n            this.$router.push({path: path});\r\n          }\r\n      },\r\n      goSearch(){\r\n          this.$router.push({path:'/search',query:{keywords: this.keywords}})\r\n      },\r\n      //获取图片地址\r\n      attachImageUrl (srcUrl) {\r\n        return srcUrl? this.$store.state.configure.HOST+srcUrl : '../assets/img/user.jpg';\r\n      },\r\n      goMenuList(path){\r\n          if(path == 0){\r\n              this.$store.commit('setLoginIn',false);\r\n              this.$store.commit('setIsActive',false);\r\n              this.$router.go(0);\r\n          }else{\r\n              this.$router.push({path:path});\r\n          }\r\n      }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '../assets/css/the-header.scss';\r\n</style>\r\n"]}]}